<shader>
	
	<inputs>
		<input name="albedoMap" type="texture" address="wrap" />
		<input name="normalMap" type="texture" address="wrap" />
		<input name="specularMap" type="texture" address="wrap" />
		<input name="emissiveMap" type="texture" address="wrap" srgb="true"/>
        <input name="decals" type="float">0.0</input>
        <input name="emissiveMod" type="float">0.0</input>
	</inputs>
	
	<code>
	<![CDATA[
		float3 DecodeNormal(const float4 texNormal)
		{
			float4 n = texNormal * 2 - 1;
			//return float3(n.a, n.g, sqrt(1 - dot(n.ag, n.ag)) );
			return n.xyz;
		}
		void MaterialShader(in Material_Input input, inout Material material)
		{
            float showDecals   = decals;
            float editEmissive = emissiveMod + 1;
            
            if (editEmissive > 10){
                editEmissive = 0.0;
            }
            
			float4 specularGloss = tex2D(specularMap, input.texCoord);
			
			material.albedo 	= pow(tex2D(albedoMap, input.texCoord).rgb, 0.7);
			material.tsNormal 	= DecodeNormal( tex2D(normalMap, input.texCoord) );
			material.specular	= specularGloss.rgb;
			material.gloss		= specularGloss.a;
			material.emissive   = tex2D(emissiveMap, input.texCoord).rgb * editEmissive;
            material.id         = showDecals;
			
		}
	]]>		
	</code>

</shader>